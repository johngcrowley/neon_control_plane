{
    "spec": {
        "format_version": 1.0,
        "timestamp": "2025-09-18T00:00:00.000Z",
        "operation_uuid": "ultra-optimized-config",
        "suspend_timeout_seconds": -1,

        "cluster": {
            "cluster_id": "ultra_optimized",
            "name": "ultra_optimized_cluster",
            "state": "running",
            "roles": [
                {
                    "name": "cloud_admin",
                    "encrypted_password": "b093c0d3b281ba6da1eacc608620abd8",
                    "options": null
                }
            ],
            "databases": [],
            "settings": [
                {
                    "name": "port",
                    "value": "55433",
                    "vartype": "integer"
                },
                {
                    "name": "listen_addresses",
                    "value": "0.0.0.0",
                    "vartype": "string"
                },

                "_comment_memory_settings": "=== MEMORY OPTIMIZATION ===",
                {
                    "name": "shared_buffers",
                    "value": "4GB",
                    "vartype": "string",
                    "_comment": "Large shared buffers for caching - optimize for read performance"
                },
                {
                    "name": "effective_cache_size",
                    "value": "12GB",
                    "vartype": "string",
                    "_comment": "Assume large system cache available"
                },
                {
                    "name": "work_mem",
                    "value": "256MB",
                    "vartype": "string",
                    "_comment": "Large work_mem for complex queries and sorts"
                },
                {
                    "name": "maintenance_work_mem",
                    "value": "2GB",
                    "vartype": "string",
                    "_comment": "Large maintenance memory for vacuum, create index, etc"
                },
                {
                    "name": "temp_buffers",
                    "value": "128MB",
                    "vartype": "string",
                    "_comment": "Large temp buffers for temporary table performance"
                },

                "_comment_connection_settings": "=== CONNECTION & CONCURRENCY ===",
                {
                    "name": "max_connections",
                    "value": "1000",
                    "vartype": "integer",
                    "_comment": "High connection limit for concurrent workloads"
                },
                {
                    "name": "superuser_reserved_connections",
                    "value": "10",
                    "vartype": "integer"
                },
                {
                    "name": "max_worker_processes",
                    "value": "32",
                    "vartype": "integer",
                    "_comment": "High worker count for parallel processing"
                },
                {
                    "name": "max_parallel_workers",
                    "value": "24",
                    "vartype": "integer",
                    "_comment": "Enable extensive parallelism"
                },
                {
                    "name": "max_parallel_workers_per_gather",
                    "value": "8",
                    "vartype": "integer",
                    "_comment": "High parallelism per query"
                },
                {
                    "name": "max_parallel_maintenance_workers",
                    "value": "8",
                    "vartype": "integer",
                    "_comment": "Parallel maintenance operations"
                },

                "_comment_wal_settings": "=== WAL & REPLICATION OPTIMIZATION ===",
                {
                    "name": "wal_level",
                    "value": "logical",
                    "vartype": "enum",
                    "_comment": "Required for Neon architecture"
                },
                {
                    "name": "wal_log_hints",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Required for Neon"
                },
                {
                    "name": "max_wal_senders",
                    "value": "20",
                    "vartype": "integer",
                    "_comment": "High WAL sender count for replication performance"
                },
                {
                    "name": "max_replication_slots",
                    "value": "20",
                    "vartype": "integer",
                    "_comment": "Match max_wal_senders"
                },
                {
                    "name": "wal_sender_timeout",
                    "value": "30s",
                    "vartype": "string",
                    "_comment": "Higher timeout to prevent disconnects under load"
                },
                {
                    "name": "wal_keep_size",
                    "value": "2GB",
                    "vartype": "string",
                    "_comment": "Keep more WAL for replication stability"
                },
                {
                    "name": "max_replication_write_lag",
                    "value": "1GB",
                    "vartype": "string",
                    "_comment": "Allow higher lag for throughput"
                },
                {
                    "name": "max_replication_flush_lag",
                    "value": "2GB",
                    "vartype": "string",
                    "_comment": "Higher flush lag for performance"
                },
                {
                    "name": "synchronous_standby_names",
                    "value": "walproposer",
                    "vartype": "string",
                    "_comment": "Required for Neon architecture"
                },

                "_comment_checkpoint_settings": "=== CHECKPOINT & I/O OPTIMIZATION ===",
                {
                    "name": "checkpoint_timeout",
                    "value": "5min",
                    "vartype": "string",
                    "_comment": "More frequent checkpoints for lower recovery time"
                },
                {
                    "name": "checkpoint_completion_target",
                    "value": "0.8",
                    "vartype": "real",
                    "_comment": "Spread checkpoint I/O over more time"
                },
                {
                    "name": "checkpoint_flush_after",
                    "value": "1MB",
                    "vartype": "string",
                    "_comment": "Aggressive flushing for consistent performance"
                },
                {
                    "name": "checkpoint_warning",
                    "value": "30s",
                    "vartype": "string",
                    "_comment": "Early warning for checkpoint issues"
                },

                "_comment_io_settings": "=== I/O PERFORMANCE SETTINGS ===",
                {
                    "name": "bgwriter_delay",
                    "value": "50ms",
                    "vartype": "string",
                    "_comment": "Faster background writer for consistent performance"
                },
                {
                    "name": "bgwriter_lru_maxpages",
                    "value": "200",
                    "vartype": "integer",
                    "_comment": "More pages per round for better throughput"
                },
                {
                    "name": "bgwriter_lru_multiplier",
                    "value": "4.0",
                    "vartype": "real",
                    "_comment": "Aggressive background writing"
                },
                {
                    "name": "bgwriter_flush_after",
                    "value": "1MB",
                    "vartype": "string",
                    "_comment": "Aggressive flushing for consistent latency"
                },
                {
                    "name": "backend_flush_after",
                    "value": "1MB",
                    "vartype": "string",
                    "_comment": "Backend flushing for consistent performance"
                },
                {
                    "name": "wal_buffers",
                    "value": "64MB",
                    "vartype": "string",
                    "_comment": "Large WAL buffers for write performance"
                },
                {
                    "name": "wal_writer_delay",
                    "value": "50ms",
                    "vartype": "string",
                    "_comment": "Faster WAL writing"
                },
                {
                    "name": "wal_writer_flush_after",
                    "value": "2MB",
                    "vartype": "string",
                    "_comment": "Aggressive WAL flushing"
                },
                {
                    "name": "commit_delay",
                    "value": "100",
                    "vartype": "integer",
                    "_comment": "Small delay to group commits for better throughput"
                },
                {
                    "name": "commit_siblings",
                    "value": "10",
                    "vartype": "integer",
                    "_comment": "Group commits when many concurrent transactions"
                },

                "_comment_query_planner": "=== QUERY PLANNER OPTIMIZATION ===",
                {
                    "name": "random_page_cost",
                    "value": "1.1",
                    "vartype": "real",
                    "_comment": "Assume fast storage (SSD/NVMe) - closer to sequential cost"
                },
                {
                    "name": "seq_page_cost",
                    "value": "1.0",
                    "vartype": "real",
                    "_comment": "Base cost for sequential reads"
                },
                {
                    "name": "cpu_tuple_cost",
                    "value": "0.01",
                    "vartype": "real",
                    "_comment": "Assume fast CPU"
                },
                {
                    "name": "cpu_index_tuple_cost",
                    "value": "0.005",
                    "vartype": "real",
                    "_comment": "Fast CPU for index operations"
                },
                {
                    "name": "cpu_operator_cost",
                    "value": "0.0025",
                    "vartype": "real",
                    "_comment": "Fast operator processing"
                },
                {
                    "name": "parallel_tuple_cost",
                    "value": "0.1",
                    "vartype": "real",
                    "_comment": "Moderate parallel overhead"
                },
                {
                    "name": "parallel_setup_cost",
                    "value": "500.0",
                    "vartype": "real",
                    "_comment": "Reasonable parallel setup cost"
                },
                {
                    "name": "jit",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Enable JIT compilation for complex queries"
                },
                {
                    "name": "jit_above_cost",
                    "value": "50000",
                    "vartype": "real",
                    "_comment": "Lower threshold for JIT - more aggressive"
                },
                {
                    "name": "jit_inline_above_cost",
                    "value": "250000",
                    "vartype": "real",
                    "_comment": "Reasonable inlining threshold"
                },
                {
                    "name": "jit_optimize_above_cost",
                    "value": "500000",
                    "vartype": "real",
                    "_comment": "Optimize expensive queries"
                },

                "_comment_vacuum_settings": "=== VACUUM & AUTOVACUUM OPTIMIZATION ===",
                {
                    "name": "autovacuum",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "autovacuum_max_workers",
                    "value": "6",
                    "vartype": "integer",
                    "_comment": "More vacuum workers for better maintenance"
                },
                {
                    "name": "autovacuum_naptime",
                    "value": "30s",
                    "vartype": "string",
                    "_comment": "More frequent autovacuum checks"
                },
                {
                    "name": "autovacuum_vacuum_threshold",
                    "value": "25",
                    "vartype": "integer",
                    "_comment": "Lower threshold for small tables"
                },
                {
                    "name": "autovacuum_vacuum_scale_factor",
                    "value": "0.1",
                    "vartype": "real",
                    "_comment": "More aggressive vacuum triggering"
                },
                {
                    "name": "autovacuum_analyze_threshold",
                    "value": "25",
                    "vartype": "integer",
                    "_comment": "Lower threshold for analyze"
                },
                {
                    "name": "autovacuum_analyze_scale_factor",
                    "value": "0.05",
                    "vartype": "real",
                    "_comment": "More frequent analyze for better statistics"
                },
                {
                    "name": "autovacuum_vacuum_cost_limit",
                    "value": "2000",
                    "vartype": "integer",
                    "_comment": "Higher cost limit for faster vacuum"
                },
                {
                    "name": "autovacuum_vacuum_cost_delay",
                    "value": "10ms",
                    "vartype": "string",
                    "_comment": "Lower delay for faster vacuum"
                },

                "_comment_logging": "=== LOGGING & MONITORING ===",
                {
                    "name": "log_connections",
                    "value": "off",
                    "vartype": "bool",
                    "_comment": "Disable for performance - use monitoring instead"
                },
                {
                    "name": "log_disconnections",
                    "value": "off",
                    "vartype": "bool"
                },
                {
                    "name": "log_line_prefix",
                    "value": "%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h ",
                    "vartype": "string"
                },
                {
                    "name": "log_checkpoints",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Monitor checkpoint performance"
                },
                {
                    "name": "log_lock_waits",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Monitor lock contention"
                },
                {
                    "name": "log_temp_files",
                    "value": "100MB",
                    "vartype": "string",
                    "_comment": "Log large temp files"
                },
                {
                    "name": "log_autovacuum_min_duration",
                    "value": "1s",
                    "vartype": "string",
                    "_comment": "Log slow vacuum operations"
                },

                "_comment_stats": "=== STATISTICS COLLECTION ===",
                {
                    "name": "track_activities",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "track_counts",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "track_io_timing",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Enable I/O timing for performance analysis"
                },
                {
                    "name": "track_functions",
                    "value": "all",
                    "vartype": "enum",
                    "_comment": "Track all function calls for debugging"
                },
                {
                    "name": "stats_temp_directory",
                    "value": "/tmp/pg_stats_temp",
                    "vartype": "string",
                    "_comment": "Use tmpfs if available"
                },

                "_comment_neon_specific": "=== NEON-SPECIFIC SETTINGS ===",
                {
                    "name": "shared_preload_libraries",
                    "value": "neon,pg_stat_statements,auto_explain",
                    "vartype": "string",
                    "_comment": "Neon extension + performance monitoring"
                },
                {
                    "name": "neon.safekeepers",
                    "value": "safekeeper1:5454,safekeeper2:5454,safekeeper3:5454",
                    "vartype": "string"
                },
                {
                    "name": "neon.timeline_id",
                    "value": "TIMELINE_ID",
                    "vartype": "string"
                },
                {
                    "name": "neon.tenant_id",
                    "value": "TENANT_ID",
                    "vartype": "string"
                },
                {
                    "name": "neon.pageserver_connstring",
                    "value": "host=pageserver port=6400",
                    "vartype": "string"
                },

                "_comment_pg_stat_statements": "=== PG_STAT_STATEMENTS CONFIGURATION ===",
                {
                    "name": "pg_stat_statements.max",
                    "value": "10000",
                    "vartype": "integer",
                    "_comment": "Track more queries for better analysis"
                },
                {
                    "name": "pg_stat_statements.track",
                    "value": "all",
                    "vartype": "enum",
                    "_comment": "Track all statements including nested"
                },
                {
                    "name": "pg_stat_statements.track_utility",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "pg_stat_statements.track_planning",
                    "value": "on",
                    "vartype": "bool"
                },

                "_comment_auto_explain": "=== AUTO_EXPLAIN CONFIGURATION ===",
                {
                    "name": "auto_explain.log_min_duration",
                    "value": "1s",
                    "vartype": "string",
                    "_comment": "Explain slow queries"
                },
                {
                    "name": "auto_explain.log_analyze",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "auto_explain.log_buffers",
                    "value": "on",
                    "vartype": "bool"
                },
                {
                    "name": "auto_explain.log_timing",
                    "value": "off",
                    "vartype": "bool",
                    "_comment": "Disable timing to reduce overhead"
                },
                {
                    "name": "auto_explain.log_triggers",
                    "value": "on",
                    "vartype": "bool"
                },

                "_comment_security": "=== SECURITY & MISC ===",
                {
                    "name": "fsync",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Keep durability for production"
                },
                {
                    "name": "password_encryption",
                    "value": "scram-sha-256",
                    "vartype": "enum",
                    "_comment": "Modern password encryption"
                },
                {
                    "name": "ssl",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Enable SSL for security"
                },
                {
                    "name": "restart_after_crash",
                    "value": "on",
                    "vartype": "bool",
                    "_comment": "Enable auto-restart after crash"
                },
                {
                    "name": "timezone",
                    "value": "UTC",
                    "vartype": "string"
                },
                {
                    "name": "default_text_search_config",
                    "value": "pg_catalog.english",
                    "vartype": "string"
                },

                "_comment_advanced": "=== ADVANCED PERFORMANCE TUNING ===",
                {
                    "name": "huge_pages",
                    "value": "try",
                    "vartype": "enum",
                    "_comment": "Use huge pages if available for better memory performance"
                },
                {
                    "name": "max_pred_locks_per_transaction",
                    "value": "128",
                    "vartype": "integer",
                    "_comment": "Higher limit for complex transactions"
                },
                {
                    "name": "max_pred_locks_per_relation",
                    "value": "2048",
                    "vartype": "integer",
                    "_comment": "Higher per-relation limit"
                },
                {
                    "name": "max_pred_locks_per_page",
                    "value": "4",
                    "vartype": "integer"
                },
                {
                    "name": "deadlock_timeout",
                    "value": "500ms",
                    "vartype": "string",
                    "_comment": "Faster deadlock detection"
                },
                {
                    "name": "lock_timeout",
                    "value": "30s",
                    "vartype": "string",
                    "_comment": "Prevent indefinite lock waits"
                },
                {
                    "name": "idle_in_transaction_session_timeout",
                    "value": "10min",
                    "vartype": "string",
                    "_comment": "Clean up idle transactions"
                },
                {
                    "name": "statement_timeout",
                    "value": "5min",
                    "vartype": "string",
                    "_comment": "Prevent runaway queries"
                }
            ]
        },

        "delta_operations": []
    },

    "compute_ctl_config": {
        "jwks": {
            "keys": [
                {
                    "use": "sig",
                    "key_ops": ["verify"],
                    "alg": "EdDSA",
                    "kid": "ZGIxMzAzOGY0YWQwODk2ODU1MTk1NzMxMDFkYmUyOWU2NzZkOWNjNjMyMGRkZGJjOWY0MjdjYWVmNzE1MjUyOAo=",
                    "kty": "OKP",
                    "crv": "Ed25519",
                    "x": "MGQ4ZDFhOTdmNTM0NmUwMDc3ZmJkN2Q0MWE0ZmI3M2NhNWE3YjFjOTNkM2IyYzRkZTQzOGM3MjBkZTk3N2E5ZAo="
                }
            ]
        }
    }
}